"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/csvtojson";
exports.ids = ["vendor-chunks/csvtojson"];
exports.modules = {

/***/ "(rsc)/./node_modules/csvtojson/node_modules/strip-bom/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/csvtojson/node_modules/strip-bom/index.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar isUtf8 = __webpack_require__(/*! is-utf8 */ \"(rsc)/./node_modules/is-utf8/is-utf8.js\");\n\nmodule.exports = function (x) {\n\t// Catches EFBBBF (UTF-8 BOM) because the buffer-to-string\n\t// conversion translates it to FEFF (UTF-16 BOM)\n\tif (typeof x === 'string' && x.charCodeAt(0) === 0xFEFF) {\n\t\treturn x.slice(1);\n\t}\n\n\tif (Buffer.isBuffer(x) && isUtf8(x) &&\n\t\tx[0] === 0xEF && x[1] === 0xBB && x[2] === 0xBF) {\n\t\treturn x.slice(3);\n\t}\n\n\treturn x;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL25vZGVfbW9kdWxlcy9zdHJpcC1ib20vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixhQUFhLG1CQUFPLENBQUMsd0RBQVM7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYW5hbHl0aWNzLWRhc2hib2FyZC1hc3Nlc3NtZW50Ly4vbm9kZV9tb2R1bGVzL2NzdnRvanNvbi9ub2RlX21vZHVsZXMvc3RyaXAtYm9tL2luZGV4LmpzP2JiZTMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyIGlzVXRmOCA9IHJlcXVpcmUoJ2lzLXV0ZjgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoeCkge1xuXHQvLyBDYXRjaGVzIEVGQkJCRiAoVVRGLTggQk9NKSBiZWNhdXNlIHRoZSBidWZmZXItdG8tc3RyaW5nXG5cdC8vIGNvbnZlcnNpb24gdHJhbnNsYXRlcyBpdCB0byBGRUZGIChVVEYtMTYgQk9NKVxuXHRpZiAodHlwZW9mIHggPT09ICdzdHJpbmcnICYmIHguY2hhckNvZGVBdCgwKSA9PT0gMHhGRUZGKSB7XG5cdFx0cmV0dXJuIHguc2xpY2UoMSk7XG5cdH1cblxuXHRpZiAoQnVmZmVyLmlzQnVmZmVyKHgpICYmIGlzVXRmOCh4KSAmJlxuXHRcdHhbMF0gPT09IDB4RUYgJiYgeFsxXSA9PT0gMHhCQiAmJiB4WzJdID09PSAweEJGKSB7XG5cdFx0cmV0dXJuIHguc2xpY2UoMyk7XG5cdH1cblxuXHRyZXR1cm4geDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/node_modules/strip-bom/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/CSVError.js":
/*!***********************************************!*\
  !*** ./node_modules/csvtojson/v2/CSVError.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar CSVError = /** @class */ (function (_super) {\n    __extends(CSVError, _super);\n    function CSVError(err, line, extra) {\n        var _this = _super.call(this, \"Error: \" + err + \". JSON Line number: \" + line + (extra ? \" near: \" + extra : \"\")) || this;\n        _this.err = err;\n        _this.line = line;\n        _this.extra = extra;\n        _this.name = \"CSV Parse Error\";\n        return _this;\n    }\n    CSVError.column_mismatched = function (index, extra) {\n        return new CSVError(\"column_mismatched\", index, extra);\n    };\n    CSVError.unclosed_quote = function (index, extra) {\n        return new CSVError(\"unclosed_quote\", index, extra);\n    };\n    CSVError.fromJSON = function (obj) {\n        return new CSVError(obj.err, obj.line, obj.extra);\n    };\n    CSVError.prototype.toJSON = function () {\n        return {\n            err: this.err,\n            line: this.line,\n            extra: this.extra\n        };\n    };\n    return CSVError;\n}(Error));\nexports[\"default\"] = CSVError;\n//# sourceMappingURL=CSVError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL0NTVkVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDbkYsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRCw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbmFseXRpY3MtZGFzaGJvYXJkLWFzc2Vzc21lbnQvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL0NTVkVycm9yLmpzPzkwNmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBDU1ZFcnJvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQ1NWRXJyb3IsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQ1NWRXJyb3IoZXJyLCBsaW5lLCBleHRyYSkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBcIkVycm9yOiBcIiArIGVyciArIFwiLiBKU09OIExpbmUgbnVtYmVyOiBcIiArIGxpbmUgKyAoZXh0cmEgPyBcIiBuZWFyOiBcIiArIGV4dHJhIDogXCJcIikpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmVyciA9IGVycjtcbiAgICAgICAgX3RoaXMubGluZSA9IGxpbmU7XG4gICAgICAgIF90aGlzLmV4dHJhID0gZXh0cmE7XG4gICAgICAgIF90aGlzLm5hbWUgPSBcIkNTViBQYXJzZSBFcnJvclwiO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIENTVkVycm9yLmNvbHVtbl9taXNtYXRjaGVkID0gZnVuY3Rpb24gKGluZGV4LCBleHRyYSkge1xuICAgICAgICByZXR1cm4gbmV3IENTVkVycm9yKFwiY29sdW1uX21pc21hdGNoZWRcIiwgaW5kZXgsIGV4dHJhKTtcbiAgICB9O1xuICAgIENTVkVycm9yLnVuY2xvc2VkX3F1b3RlID0gZnVuY3Rpb24gKGluZGV4LCBleHRyYSkge1xuICAgICAgICByZXR1cm4gbmV3IENTVkVycm9yKFwidW5jbG9zZWRfcXVvdGVcIiwgaW5kZXgsIGV4dHJhKTtcbiAgICB9O1xuICAgIENTVkVycm9yLmZyb21KU09OID0gZnVuY3Rpb24gKG9iaikge1xuICAgICAgICByZXR1cm4gbmV3IENTVkVycm9yKG9iai5lcnIsIG9iai5saW5lLCBvYmouZXh0cmEpO1xuICAgIH07XG4gICAgQ1NWRXJyb3IucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGVycjogdGhpcy5lcnIsXG4gICAgICAgICAgICBsaW5lOiB0aGlzLmxpbmUsXG4gICAgICAgICAgICBleHRyYTogdGhpcy5leHRyYVxuICAgICAgICB9O1xuICAgIH07XG4gICAgcmV0dXJuIENTVkVycm9yO1xufShFcnJvcikpO1xuZXhwb3J0cy5kZWZhdWx0ID0gQ1NWRXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DU1ZFcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/CSVError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/Converter.js":
/*!************************************************!*\
  !*** ./node_modules/csvtojson/v2/Converter.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar stream_1 = __webpack_require__(/*! stream */ \"stream\");\nvar Parameters_1 = __webpack_require__(/*! ./Parameters */ \"(rsc)/./node_modules/csvtojson/v2/Parameters.js\");\nvar ParseRuntime_1 = __webpack_require__(/*! ./ParseRuntime */ \"(rsc)/./node_modules/csvtojson/v2/ParseRuntime.js\");\nvar bluebird_1 = __importDefault(__webpack_require__(/*! bluebird */ \"(rsc)/./node_modules/bluebird/js/release/bluebird.js\"));\n// import { ProcessorFork } from \"./ProcessFork\";\nvar ProcessorLocal_1 = __webpack_require__(/*! ./ProcessorLocal */ \"(rsc)/./node_modules/csvtojson/v2/ProcessorLocal.js\");\nvar Result_1 = __webpack_require__(/*! ./Result */ \"(rsc)/./node_modules/csvtojson/v2/Result.js\");\nvar Converter = /** @class */ (function (_super) {\n    __extends(Converter, _super);\n    function Converter(param, options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, options) || this;\n        _this.options = options;\n        _this.params = Parameters_1.mergeParams(param);\n        _this.runtime = ParseRuntime_1.initParseRuntime(_this);\n        _this.result = new Result_1.Result(_this);\n        // if (this.params.fork) {\n        //   this.processor = new ProcessorFork(this);\n        // } else {\n        _this.processor = new ProcessorLocal_1.ProcessorLocal(_this);\n        // }\n        _this.once(\"error\", function (err) {\n            // console.log(\"BBB\");\n            //wait for next cycle to emit the errors.\n            setImmediate(function () {\n                _this.result.processError(err);\n                _this.emit(\"done\", err);\n            });\n        });\n        _this.once(\"done\", function () {\n            _this.processor.destroy();\n        });\n        return _this;\n    }\n    Converter.prototype.preRawData = function (onRawData) {\n        this.runtime.preRawDataHook = onRawData;\n        return this;\n    };\n    Converter.prototype.preFileLine = function (onFileLine) {\n        this.runtime.preFileLineHook = onFileLine;\n        return this;\n    };\n    Converter.prototype.subscribe = function (onNext, onError, onCompleted) {\n        this.parseRuntime.subscribe = {\n            onNext: onNext,\n            onError: onError,\n            onCompleted: onCompleted\n        };\n        return this;\n    };\n    Converter.prototype.fromFile = function (filePath, options) {\n        var _this = this;\n        var fs = __webpack_require__(/*! fs */ \"fs\");\n        // var rs = null;\n        // this.wrapCallback(cb, function () {\n        //   if (rs && rs.destroy) {\n        //     rs.destroy();\n        //   }\n        // });\n        fs.exists(filePath, function (exist) {\n            if (exist) {\n                var rs = fs.createReadStream(filePath, options);\n                rs.pipe(_this);\n            }\n            else {\n                _this.emit('error', new Error(\"File does not exist. Check to make sure the file path to your csv is correct.\"));\n            }\n        });\n        return this;\n    };\n    Converter.prototype.fromStream = function (readStream) {\n        readStream.pipe(this);\n        return this;\n    };\n    Converter.prototype.fromString = function (csvString) {\n        var csv = csvString.toString();\n        var read = new stream_1.Readable();\n        var idx = 0;\n        read._read = function (size) {\n            if (idx >= csvString.length) {\n                this.push(null);\n            }\n            else {\n                var str = csvString.substr(idx, size);\n                this.push(str);\n                idx += size;\n            }\n        };\n        return this.fromStream(read);\n    };\n    Converter.prototype.then = function (onfulfilled, onrejected) {\n        var _this = this;\n        return new bluebird_1.default(function (resolve, reject) {\n            _this.parseRuntime.then = {\n                onfulfilled: function (value) {\n                    if (onfulfilled) {\n                        resolve(onfulfilled(value));\n                    }\n                    else {\n                        resolve(value);\n                    }\n                },\n                onrejected: function (err) {\n                    if (onrejected) {\n                        resolve(onrejected(err));\n                    }\n                    else {\n                        reject(err);\n                    }\n                }\n            };\n        });\n    };\n    Object.defineProperty(Converter.prototype, \"parseParam\", {\n        get: function () {\n            return this.params;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Converter.prototype, \"parseRuntime\", {\n        get: function () {\n            return this.runtime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Converter.prototype._transform = function (chunk, encoding, cb) {\n        var _this = this;\n        this.processor.process(chunk)\n            .then(function (result) {\n            // console.log(result);\n            if (result.length > 0) {\n                _this.runtime.started = true;\n                return _this.result.processResult(result);\n            }\n        })\n            .then(function () {\n            _this.emit(\"drained\");\n            cb();\n        }, function (error) {\n            _this.runtime.hasError = true;\n            _this.runtime.error = error;\n            _this.emit(\"error\", error);\n            cb();\n        });\n    };\n    Converter.prototype._flush = function (cb) {\n        var _this = this;\n        this.processor.flush()\n            .then(function (data) {\n            if (data.length > 0) {\n                return _this.result.processResult(data);\n            }\n        })\n            .then(function () {\n            _this.processEnd(cb);\n        }, function (err) {\n            _this.emit(\"error\", err);\n            cb();\n        });\n    };\n    Converter.prototype.processEnd = function (cb) {\n        this.result.endProcess();\n        this.emit(\"done\");\n        cb();\n    };\n    Object.defineProperty(Converter.prototype, \"parsedLineNumber\", {\n        get: function () {\n            return this.runtime.parsedLineNumber;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Converter;\n}(stream_1.Transform));\nexports.Converter = Converter;\n//# sourceMappingURL=Converter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/Converter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/Parameters.js":
/*!*************************************************!*\
  !*** ./node_modules/csvtojson/v2/Parameters.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nfunction mergeParams(params) {\n    var defaultParam = {\n        delimiter: ',',\n        ignoreColumns: undefined,\n        includeColumns: undefined,\n        quote: '\"',\n        trim: true,\n        checkType: false,\n        ignoreEmpty: false,\n        // fork: false,\n        noheader: false,\n        headers: undefined,\n        flatKeys: false,\n        maxRowLength: 0,\n        checkColumn: false,\n        escape: '\"',\n        colParser: {},\n        eol: undefined,\n        alwaysSplitAtEOL: false,\n        output: \"json\",\n        nullObject: false,\n        downstreamFormat: \"line\",\n        needEmitAll: true\n    };\n    if (!params) {\n        params = {};\n    }\n    for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n            if (Array.isArray(params[key])) {\n                defaultParam[key] = [].concat(params[key]);\n            }\n            else {\n                defaultParam[key] = params[key];\n            }\n        }\n    }\n    return defaultParam;\n}\nexports.mergeParams = mergeParams;\n//# sourceMappingURL=Parameters.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL1BhcmFtZXRlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbmFseXRpY3MtZGFzaGJvYXJkLWFzc2Vzc21lbnQvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL1BhcmFtZXRlcnMuanM/OGMwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmZ1bmN0aW9uIG1lcmdlUGFyYW1zKHBhcmFtcykge1xuICAgIHZhciBkZWZhdWx0UGFyYW0gPSB7XG4gICAgICAgIGRlbGltaXRlcjogJywnLFxuICAgICAgICBpZ25vcmVDb2x1bW5zOiB1bmRlZmluZWQsXG4gICAgICAgIGluY2x1ZGVDb2x1bW5zOiB1bmRlZmluZWQsXG4gICAgICAgIHF1b3RlOiAnXCInLFxuICAgICAgICB0cmltOiB0cnVlLFxuICAgICAgICBjaGVja1R5cGU6IGZhbHNlLFxuICAgICAgICBpZ25vcmVFbXB0eTogZmFsc2UsXG4gICAgICAgIC8vIGZvcms6IGZhbHNlLFxuICAgICAgICBub2hlYWRlcjogZmFsc2UsXG4gICAgICAgIGhlYWRlcnM6IHVuZGVmaW5lZCxcbiAgICAgICAgZmxhdEtleXM6IGZhbHNlLFxuICAgICAgICBtYXhSb3dMZW5ndGg6IDAsXG4gICAgICAgIGNoZWNrQ29sdW1uOiBmYWxzZSxcbiAgICAgICAgZXNjYXBlOiAnXCInLFxuICAgICAgICBjb2xQYXJzZXI6IHt9LFxuICAgICAgICBlb2w6IHVuZGVmaW5lZCxcbiAgICAgICAgYWx3YXlzU3BsaXRBdEVPTDogZmFsc2UsXG4gICAgICAgIG91dHB1dDogXCJqc29uXCIsXG4gICAgICAgIG51bGxPYmplY3Q6IGZhbHNlLFxuICAgICAgICBkb3duc3RyZWFtRm9ybWF0OiBcImxpbmVcIixcbiAgICAgICAgbmVlZEVtaXRBbGw6IHRydWVcbiAgICB9O1xuICAgIGlmICghcGFyYW1zKSB7XG4gICAgICAgIHBhcmFtcyA9IHt9O1xuICAgIH1cbiAgICBmb3IgKHZhciBrZXkgaW4gcGFyYW1zKSB7XG4gICAgICAgIGlmIChwYXJhbXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocGFyYW1zW2tleV0pKSB7XG4gICAgICAgICAgICAgICAgZGVmYXVsdFBhcmFtW2tleV0gPSBbXS5jb25jYXQocGFyYW1zW2tleV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZGVmYXVsdFBhcmFtW2tleV0gPSBwYXJhbXNba2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZGVmYXVsdFBhcmFtO1xufVxuZXhwb3J0cy5tZXJnZVBhcmFtcyA9IG1lcmdlUGFyYW1zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGFyYW1ldGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/Parameters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/ParseRuntime.js":
/*!***************************************************!*\
  !*** ./node_modules/csvtojson/v2/ParseRuntime.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nfunction initParseRuntime(converter) {\n    var params = converter.parseParam;\n    var rtn = {\n        needProcessIgnoreColumn: false,\n        needProcessIncludeColumn: false,\n        selectedColumns: undefined,\n        ended: false,\n        hasError: false,\n        error: undefined,\n        delimiter: converter.parseParam.delimiter,\n        eol: converter.parseParam.eol,\n        columnConv: [],\n        headerType: [],\n        headerTitle: [],\n        headerFlag: [],\n        headers: undefined,\n        started: false,\n        parsedLineNumber: 0,\n        columnValueSetter: [],\n    };\n    if (params.ignoreColumns) {\n        rtn.needProcessIgnoreColumn = true;\n    }\n    if (params.includeColumns) {\n        rtn.needProcessIncludeColumn = true;\n    }\n    return rtn;\n}\nexports.initParseRuntime = initParseRuntime;\n//# sourceMappingURL=ParseRuntime.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL1BhcnNlUnVudGltZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL2FuYWx5dGljcy1kYXNoYm9hcmQtYXNzZXNzbWVudC8uL25vZGVfbW9kdWxlcy9jc3Z0b2pzb24vdjIvUGFyc2VSdW50aW1lLmpzP2YzY2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5mdW5jdGlvbiBpbml0UGFyc2VSdW50aW1lKGNvbnZlcnRlcikge1xuICAgIHZhciBwYXJhbXMgPSBjb252ZXJ0ZXIucGFyc2VQYXJhbTtcbiAgICB2YXIgcnRuID0ge1xuICAgICAgICBuZWVkUHJvY2Vzc0lnbm9yZUNvbHVtbjogZmFsc2UsXG4gICAgICAgIG5lZWRQcm9jZXNzSW5jbHVkZUNvbHVtbjogZmFsc2UsXG4gICAgICAgIHNlbGVjdGVkQ29sdW1uczogdW5kZWZpbmVkLFxuICAgICAgICBlbmRlZDogZmFsc2UsXG4gICAgICAgIGhhc0Vycm9yOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IHVuZGVmaW5lZCxcbiAgICAgICAgZGVsaW1pdGVyOiBjb252ZXJ0ZXIucGFyc2VQYXJhbS5kZWxpbWl0ZXIsXG4gICAgICAgIGVvbDogY29udmVydGVyLnBhcnNlUGFyYW0uZW9sLFxuICAgICAgICBjb2x1bW5Db252OiBbXSxcbiAgICAgICAgaGVhZGVyVHlwZTogW10sXG4gICAgICAgIGhlYWRlclRpdGxlOiBbXSxcbiAgICAgICAgaGVhZGVyRmxhZzogW10sXG4gICAgICAgIGhlYWRlcnM6IHVuZGVmaW5lZCxcbiAgICAgICAgc3RhcnRlZDogZmFsc2UsXG4gICAgICAgIHBhcnNlZExpbmVOdW1iZXI6IDAsXG4gICAgICAgIGNvbHVtblZhbHVlU2V0dGVyOiBbXSxcbiAgICB9O1xuICAgIGlmIChwYXJhbXMuaWdub3JlQ29sdW1ucykge1xuICAgICAgICBydG4ubmVlZFByb2Nlc3NJZ25vcmVDb2x1bW4gPSB0cnVlO1xuICAgIH1cbiAgICBpZiAocGFyYW1zLmluY2x1ZGVDb2x1bW5zKSB7XG4gICAgICAgIHJ0bi5uZWVkUHJvY2Vzc0luY2x1ZGVDb2x1bW4gPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gcnRuO1xufVxuZXhwb3J0cy5pbml0UGFyc2VSdW50aW1lID0gaW5pdFBhcnNlUnVudGltZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBhcnNlUnVudGltZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/ParseRuntime.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/Processor.js":
/*!************************************************!*\
  !*** ./node_modules/csvtojson/v2/Processor.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Processor = /** @class */ (function () {\n    function Processor(converter) {\n        this.converter = converter;\n        this.params = converter.parseParam;\n        this.runtime = converter.parseRuntime;\n    }\n    return Processor;\n}());\nexports.Processor = Processor;\n//# sourceMappingURL=Processor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL1Byb2Nlc3Nvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbmFseXRpY3MtZGFzaGJvYXJkLWFzc2Vzc21lbnQvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL1Byb2Nlc3Nvci5qcz81OTBlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFByb2Nlc3NvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQcm9jZXNzb3IoY29udmVydGVyKSB7XG4gICAgICAgIHRoaXMuY29udmVydGVyID0gY29udmVydGVyO1xuICAgICAgICB0aGlzLnBhcmFtcyA9IGNvbnZlcnRlci5wYXJzZVBhcmFtO1xuICAgICAgICB0aGlzLnJ1bnRpbWUgPSBjb252ZXJ0ZXIucGFyc2VSdW50aW1lO1xuICAgIH1cbiAgICByZXR1cm4gUHJvY2Vzc29yO1xufSgpKTtcbmV4cG9ydHMuUHJvY2Vzc29yID0gUHJvY2Vzc29yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UHJvY2Vzc29yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/Processor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/ProcessorLocal.js":
/*!*****************************************************!*\
  !*** ./node_modules/csvtojson/v2/ProcessorLocal.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Processor_1 = __webpack_require__(/*! ./Processor */ \"(rsc)/./node_modules/csvtojson/v2/Processor.js\");\nvar bluebird_1 = __importDefault(__webpack_require__(/*! bluebird */ \"(rsc)/./node_modules/bluebird/js/release/bluebird.js\"));\nvar dataClean_1 = __webpack_require__(/*! ./dataClean */ \"(rsc)/./node_modules/csvtojson/v2/dataClean.js\");\nvar getEol_1 = __importDefault(__webpack_require__(/*! ./getEol */ \"(rsc)/./node_modules/csvtojson/v2/getEol.js\"));\nvar fileline_1 = __webpack_require__(/*! ./fileline */ \"(rsc)/./node_modules/csvtojson/v2/fileline.js\");\nvar util_1 = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/csvtojson/v2/util.js\");\nvar rowSplit_1 = __webpack_require__(/*! ./rowSplit */ \"(rsc)/./node_modules/csvtojson/v2/rowSplit.js\");\nvar lineToJson_1 = __importDefault(__webpack_require__(/*! ./lineToJson */ \"(rsc)/./node_modules/csvtojson/v2/lineToJson.js\"));\nvar CSVError_1 = __importDefault(__webpack_require__(/*! ./CSVError */ \"(rsc)/./node_modules/csvtojson/v2/CSVError.js\"));\nvar ProcessorLocal = /** @class */ (function (_super) {\n    __extends(ProcessorLocal, _super);\n    function ProcessorLocal() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowSplit = new rowSplit_1.RowSplit(_this.converter);\n        _this.eolEmitted = false;\n        _this._needEmitEol = undefined;\n        _this.headEmitted = false;\n        _this._needEmitHead = undefined;\n        return _this;\n    }\n    ProcessorLocal.prototype.flush = function () {\n        var _this = this;\n        if (this.runtime.csvLineBuffer && this.runtime.csvLineBuffer.length > 0) {\n            var buf = this.runtime.csvLineBuffer;\n            this.runtime.csvLineBuffer = undefined;\n            return this.process(buf, true)\n                .then(function (res) {\n                if (_this.runtime.csvLineBuffer && _this.runtime.csvLineBuffer.length > 0) {\n                    return bluebird_1.default.reject(CSVError_1.default.unclosed_quote(_this.runtime.parsedLineNumber, _this.runtime.csvLineBuffer.toString()));\n                }\n                else {\n                    return bluebird_1.default.resolve(res);\n                }\n            });\n        }\n        else {\n            return bluebird_1.default.resolve([]);\n        }\n    };\n    ProcessorLocal.prototype.destroy = function () {\n        return bluebird_1.default.resolve();\n    };\n    Object.defineProperty(ProcessorLocal.prototype, \"needEmitEol\", {\n        get: function () {\n            if (this._needEmitEol === undefined) {\n                this._needEmitEol = this.converter.listeners(\"eol\").length > 0;\n            }\n            return this._needEmitEol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProcessorLocal.prototype, \"needEmitHead\", {\n        get: function () {\n            if (this._needEmitHead === undefined) {\n                this._needEmitHead = this.converter.listeners(\"header\").length > 0;\n            }\n            return this._needEmitHead;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProcessorLocal.prototype.process = function (chunk, finalChunk) {\n        var _this = this;\n        if (finalChunk === void 0) { finalChunk = false; }\n        var csvString;\n        if (finalChunk) {\n            csvString = chunk.toString();\n        }\n        else {\n            csvString = dataClean_1.prepareData(chunk, this.converter.parseRuntime);\n        }\n        return bluebird_1.default.resolve()\n            .then(function () {\n            if (_this.runtime.preRawDataHook) {\n                return _this.runtime.preRawDataHook(csvString);\n            }\n            else {\n                return csvString;\n            }\n        })\n            .then(function (csv) {\n            if (csv && csv.length > 0) {\n                return _this.processCSV(csv, finalChunk);\n            }\n            else {\n                return bluebird_1.default.resolve([]);\n            }\n        });\n    };\n    ProcessorLocal.prototype.processCSV = function (csv, finalChunk) {\n        var _this = this;\n        var params = this.params;\n        var runtime = this.runtime;\n        if (!runtime.eol) {\n            getEol_1.default(csv, runtime);\n        }\n        if (this.needEmitEol && !this.eolEmitted && runtime.eol) {\n            this.converter.emit(\"eol\", runtime.eol);\n            this.eolEmitted = true;\n        }\n        // trim csv file has initial blank lines.\n        if (params.ignoreEmpty && !runtime.started) {\n            csv = util_1.trimLeft(csv);\n        }\n        var stringToLineResult = fileline_1.stringToLines(csv, runtime);\n        if (!finalChunk) {\n            this.prependLeftBuf(util_1.bufFromString(stringToLineResult.partial));\n        }\n        else {\n            stringToLineResult.lines.push(stringToLineResult.partial);\n            stringToLineResult.partial = \"\";\n        }\n        if (stringToLineResult.lines.length > 0) {\n            var prom = void 0;\n            if (runtime.preFileLineHook) {\n                prom = this.runPreLineHook(stringToLineResult.lines);\n            }\n            else {\n                prom = bluebird_1.default.resolve(stringToLineResult.lines);\n            }\n            return prom.then(function (lines) {\n                if (!runtime.started\n                    && !_this.runtime.headers) {\n                    return _this.processDataWithHead(lines);\n                }\n                else {\n                    return _this.processCSVBody(lines);\n                }\n            });\n        }\n        else {\n            return bluebird_1.default.resolve([]);\n        }\n    };\n    ProcessorLocal.prototype.processDataWithHead = function (lines) {\n        if (this.params.noheader) {\n            if (this.params.headers) {\n                this.runtime.headers = this.params.headers;\n            }\n            else {\n                this.runtime.headers = [];\n            }\n        }\n        else {\n            var left = \"\";\n            var headerRow = [];\n            while (lines.length) {\n                var line = left + lines.shift();\n                var row = this.rowSplit.parse(line);\n                if (row.closed) {\n                    headerRow = row.cells;\n                    left = \"\";\n                    break;\n                }\n                else {\n                    left = line + getEol_1.default(line, this.runtime);\n                }\n            }\n            this.prependLeftBuf(util_1.bufFromString(left));\n            if (headerRow.length === 0) {\n                return [];\n            }\n            if (this.params.headers) {\n                this.runtime.headers = this.params.headers;\n            }\n            else {\n                this.runtime.headers = headerRow;\n            }\n        }\n        if (this.runtime.needProcessIgnoreColumn || this.runtime.needProcessIncludeColumn) {\n            this.filterHeader();\n        }\n        if (this.needEmitHead && !this.headEmitted) {\n            this.converter.emit(\"header\", this.runtime.headers);\n            this.headEmitted = true;\n        }\n        return this.processCSVBody(lines);\n    };\n    ProcessorLocal.prototype.filterHeader = function () {\n        this.runtime.selectedColumns = [];\n        if (this.runtime.headers) {\n            var headers = this.runtime.headers;\n            for (var i = 0; i < headers.length; i++) {\n                if (this.params.ignoreColumns) {\n                    if (this.params.ignoreColumns.test(headers[i])) {\n                        if (this.params.includeColumns && this.params.includeColumns.test(headers[i])) {\n                            this.runtime.selectedColumns.push(i);\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                    else {\n                        this.runtime.selectedColumns.push(i);\n                    }\n                }\n                else if (this.params.includeColumns) {\n                    if (this.params.includeColumns.test(headers[i])) {\n                        this.runtime.selectedColumns.push(i);\n                    }\n                }\n                else {\n                    this.runtime.selectedColumns.push(i);\n                }\n                // if (this.params.includeColumns && this.params.includeColumns.test(headers[i])){\n                //   this.runtime.selectedColumns.push(i);\n                // }else{\n                //   if (this.params.ignoreColumns && this.params.ignoreColumns.test(headers[i])){\n                //     continue;\n                //   }else{\n                //     if (this.params.ignoreColumns && !this.params.includeColumns){\n                //       this.runtime.selectedColumns.push(i);\n                //     }\n                //   }\n                // }\n            }\n            this.runtime.headers = util_1.filterArray(this.runtime.headers, this.runtime.selectedColumns);\n        }\n    };\n    ProcessorLocal.prototype.processCSVBody = function (lines) {\n        if (this.params.output === \"line\") {\n            return lines;\n        }\n        else {\n            var result = this.rowSplit.parseMultiLines(lines);\n            this.prependLeftBuf(util_1.bufFromString(result.partial));\n            if (this.params.output === \"csv\") {\n                return result.rowsCells;\n            }\n            else {\n                return lineToJson_1.default(result.rowsCells, this.converter);\n            }\n        }\n        // var jsonArr = linesToJson(lines.lines, params, this.recordNum);\n        // this.processResult(jsonArr);\n        // this.lastIndex += jsonArr.length;\n        // this.recordNum += jsonArr.length;\n    };\n    ProcessorLocal.prototype.prependLeftBuf = function (buf) {\n        if (buf) {\n            if (this.runtime.csvLineBuffer) {\n                this.runtime.csvLineBuffer = Buffer.concat([buf, this.runtime.csvLineBuffer]);\n            }\n            else {\n                this.runtime.csvLineBuffer = buf;\n            }\n        }\n    };\n    ProcessorLocal.prototype.runPreLineHook = function (lines) {\n        var _this = this;\n        return new bluebird_1.default(function (resolve, reject) {\n            processLineHook(lines, _this.runtime, 0, function (err) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(lines);\n                }\n            });\n        });\n    };\n    return ProcessorLocal;\n}(Processor_1.Processor));\nexports.ProcessorLocal = ProcessorLocal;\nfunction processLineHook(lines, runtime, offset, cb) {\n    if (offset >= lines.length) {\n        cb();\n    }\n    else {\n        if (runtime.preFileLineHook) {\n            var line = lines[offset];\n            var res = runtime.preFileLineHook(line, runtime.parsedLineNumber + offset);\n            offset++;\n            if (res && res.then) {\n                res.then(function (value) {\n                    lines[offset - 1] = value;\n                    processLineHook(lines, runtime, offset, cb);\n                });\n            }\n            else {\n                lines[offset - 1] = res;\n                while (offset < lines.length) {\n                    lines[offset] = runtime.preFileLineHook(lines[offset], runtime.parsedLineNumber + offset);\n                    offset++;\n                }\n                cb();\n            }\n        }\n        else {\n            cb();\n        }\n    }\n}\n//# sourceMappingURL=ProcessorLocal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/ProcessorLocal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/Result.js":
/*!*********************************************!*\
  !*** ./node_modules/csvtojson/v2/Result.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar bluebird_1 = __importDefault(__webpack_require__(/*! bluebird */ \"(rsc)/./node_modules/bluebird/js/release/bluebird.js\"));\nvar os_1 = __webpack_require__(/*! os */ \"os\");\nvar Result = /** @class */ (function () {\n    function Result(converter) {\n        this.converter = converter;\n        this.finalResult = [];\n    }\n    Object.defineProperty(Result.prototype, \"needEmitLine\", {\n        get: function () {\n            return !!this.converter.parseRuntime.subscribe && !!this.converter.parseRuntime.subscribe.onNext || this.needPushDownstream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Result.prototype, \"needPushDownstream\", {\n        get: function () {\n            if (this._needPushDownstream === undefined) {\n                this._needPushDownstream = this.converter.listeners(\"data\").length > 0 || this.converter.listeners(\"readable\").length > 0;\n            }\n            return this._needPushDownstream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Result.prototype, \"needEmitAll\", {\n        get: function () {\n            return !!this.converter.parseRuntime.then && this.converter.parseParam.needEmitAll;\n            // return !!this.converter.parseRuntime.then;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Result.prototype.processResult = function (resultLines) {\n        var _this = this;\n        var startPos = this.converter.parseRuntime.parsedLineNumber;\n        if (this.needPushDownstream && this.converter.parseParam.downstreamFormat === \"array\") {\n            if (startPos === 0) {\n                pushDownstream(this.converter, \"[\" + os_1.EOL);\n            }\n        }\n        // let prom: P<any>;\n        return new bluebird_1.default(function (resolve, reject) {\n            if (_this.needEmitLine) {\n                processLineByLine(resultLines, _this.converter, 0, _this.needPushDownstream, function (err) {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        _this.appendFinalResult(resultLines);\n                        resolve();\n                    }\n                });\n                // resolve();\n            }\n            else {\n                _this.appendFinalResult(resultLines);\n                resolve();\n            }\n        });\n    };\n    Result.prototype.appendFinalResult = function (lines) {\n        if (this.needEmitAll) {\n            this.finalResult = this.finalResult.concat(lines);\n        }\n        this.converter.parseRuntime.parsedLineNumber += lines.length;\n    };\n    Result.prototype.processError = function (err) {\n        if (this.converter.parseRuntime.subscribe && this.converter.parseRuntime.subscribe.onError) {\n            this.converter.parseRuntime.subscribe.onError(err);\n        }\n        if (this.converter.parseRuntime.then && this.converter.parseRuntime.then.onrejected) {\n            this.converter.parseRuntime.then.onrejected(err);\n        }\n    };\n    Result.prototype.endProcess = function () {\n        if (this.converter.parseRuntime.then && this.converter.parseRuntime.then.onfulfilled) {\n            if (this.needEmitAll) {\n                this.converter.parseRuntime.then.onfulfilled(this.finalResult);\n            }\n            else {\n                this.converter.parseRuntime.then.onfulfilled([]);\n            }\n        }\n        if (this.converter.parseRuntime.subscribe && this.converter.parseRuntime.subscribe.onCompleted) {\n            this.converter.parseRuntime.subscribe.onCompleted();\n        }\n        if (this.needPushDownstream && this.converter.parseParam.downstreamFormat === \"array\") {\n            pushDownstream(this.converter, \"]\" + os_1.EOL);\n        }\n    };\n    return Result;\n}());\nexports.Result = Result;\nfunction processLineByLine(lines, conv, offset, needPushDownstream, cb) {\n    if (offset >= lines.length) {\n        cb();\n    }\n    else {\n        if (conv.parseRuntime.subscribe && conv.parseRuntime.subscribe.onNext) {\n            var hook_1 = conv.parseRuntime.subscribe.onNext;\n            var nextLine_1 = lines[offset];\n            var res = hook_1(nextLine_1, conv.parseRuntime.parsedLineNumber + offset);\n            offset++;\n            // if (isAsync === undefined) {\n            if (res && res.then) {\n                res.then(function () {\n                    processRecursive(lines, hook_1, conv, offset, needPushDownstream, cb, nextLine_1);\n                }, cb);\n            }\n            else {\n                // processRecursive(lines, hook, conv, offset, needPushDownstream, cb, nextLine, false);\n                if (needPushDownstream) {\n                    pushDownstream(conv, nextLine_1);\n                }\n                while (offset < lines.length) {\n                    var line = lines[offset];\n                    hook_1(line, conv.parseRuntime.parsedLineNumber + offset);\n                    offset++;\n                    if (needPushDownstream) {\n                        pushDownstream(conv, line);\n                    }\n                }\n                cb();\n            }\n            // } else if (isAsync === true) {\n            //   (res as PromiseLike<void>).then(function () {\n            //     processRecursive(lines, hook, conv, offset, needPushDownstream, cb, nextLine, true);\n            //   }, cb);\n            // } else if (isAsync === false) {\n            //   processRecursive(lines, hook, conv, offset, needPushDownstream, cb, nextLine, false);\n            // }\n        }\n        else {\n            if (needPushDownstream) {\n                while (offset < lines.length) {\n                    var line = lines[offset++];\n                    pushDownstream(conv, line);\n                }\n            }\n            cb();\n        }\n    }\n}\nfunction processRecursive(lines, hook, conv, offset, needPushDownstream, cb, res) {\n    if (needPushDownstream) {\n        pushDownstream(conv, res);\n    }\n    processLineByLine(lines, conv, offset, needPushDownstream, cb);\n}\nfunction pushDownstream(conv, res) {\n    if (typeof res === \"object\" && !conv.options.objectMode) {\n        var data = JSON.stringify(res);\n        conv.push(data + (conv.parseParam.downstreamFormat === \"array\" ? \",\" + os_1.EOL : os_1.EOL), \"utf8\");\n    }\n    else {\n        conv.push(res);\n    }\n}\n//# sourceMappingURL=Result.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL1Jlc3VsdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQyxtQkFBTyxDQUFDLHNFQUFVO0FBQ25ELFdBQVcsbUJBQU8sQ0FBQyxjQUFJO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2FuYWx5dGljcy1kYXNoYm9hcmQtYXNzZXNzbWVudC8uL25vZGVfbW9kdWxlcy9jc3Z0b2pzb24vdjIvUmVzdWx0LmpzP2UzYzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYmx1ZWJpcmRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYmx1ZWJpcmRcIikpO1xudmFyIG9zXzEgPSByZXF1aXJlKFwib3NcIik7XG52YXIgUmVzdWx0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJlc3VsdChjb252ZXJ0ZXIpIHtcbiAgICAgICAgdGhpcy5jb252ZXJ0ZXIgPSBjb252ZXJ0ZXI7XG4gICAgICAgIHRoaXMuZmluYWxSZXN1bHQgPSBbXTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFJlc3VsdC5wcm90b3R5cGUsIFwibmVlZEVtaXRMaW5lXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gISF0aGlzLmNvbnZlcnRlci5wYXJzZVJ1bnRpbWUuc3Vic2NyaWJlICYmICEhdGhpcy5jb252ZXJ0ZXIucGFyc2VSdW50aW1lLnN1YnNjcmliZS5vbk5leHQgfHwgdGhpcy5uZWVkUHVzaERvd25zdHJlYW07XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSZXN1bHQucHJvdG90eXBlLCBcIm5lZWRQdXNoRG93bnN0cmVhbVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX25lZWRQdXNoRG93bnN0cmVhbSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbmVlZFB1c2hEb3duc3RyZWFtID0gdGhpcy5jb252ZXJ0ZXIubGlzdGVuZXJzKFwiZGF0YVwiKS5sZW5ndGggPiAwIHx8IHRoaXMuY29udmVydGVyLmxpc3RlbmVycyhcInJlYWRhYmxlXCIpLmxlbmd0aCA+IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbmVlZFB1c2hEb3duc3RyZWFtO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUmVzdWx0LnByb3RvdHlwZSwgXCJuZWVkRW1pdEFsbFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuICEhdGhpcy5jb252ZXJ0ZXIucGFyc2VSdW50aW1lLnRoZW4gJiYgdGhpcy5jb252ZXJ0ZXIucGFyc2VQYXJhbS5uZWVkRW1pdEFsbDtcbiAgICAgICAgICAgIC8vIHJldHVybiAhIXRoaXMuY29udmVydGVyLnBhcnNlUnVudGltZS50aGVuO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBSZXN1bHQucHJvdG90eXBlLnByb2Nlc3NSZXN1bHQgPSBmdW5jdGlvbiAocmVzdWx0TGluZXMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIHN0YXJ0UG9zID0gdGhpcy5jb252ZXJ0ZXIucGFyc2VSdW50aW1lLnBhcnNlZExpbmVOdW1iZXI7XG4gICAgICAgIGlmICh0aGlzLm5lZWRQdXNoRG93bnN0cmVhbSAmJiB0aGlzLmNvbnZlcnRlci5wYXJzZVBhcmFtLmRvd25zdHJlYW1Gb3JtYXQgPT09IFwiYXJyYXlcIikge1xuICAgICAgICAgICAgaWYgKHN0YXJ0UG9zID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcHVzaERvd25zdHJlYW0odGhpcy5jb252ZXJ0ZXIsIFwiW1wiICsgb3NfMS5FT0wpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIGxldCBwcm9tOiBQPGFueT47XG4gICAgICAgIHJldHVybiBuZXcgYmx1ZWJpcmRfMS5kZWZhdWx0KGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICAgIGlmIChfdGhpcy5uZWVkRW1pdExpbmUpIHtcbiAgICAgICAgICAgICAgICBwcm9jZXNzTGluZUJ5TGluZShyZXN1bHRMaW5lcywgX3RoaXMuY29udmVydGVyLCAwLCBfdGhpcy5uZWVkUHVzaERvd25zdHJlYW0sIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5hcHBlbmRGaW5hbFJlc3VsdChyZXN1bHRMaW5lcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAvLyByZXNvbHZlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5hcHBlbmRGaW5hbFJlc3VsdChyZXN1bHRMaW5lcyk7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFJlc3VsdC5wcm90b3R5cGUuYXBwZW5kRmluYWxSZXN1bHQgPSBmdW5jdGlvbiAobGluZXMpIHtcbiAgICAgICAgaWYgKHRoaXMubmVlZEVtaXRBbGwpIHtcbiAgICAgICAgICAgIHRoaXMuZmluYWxSZXN1bHQgPSB0aGlzLmZpbmFsUmVzdWx0LmNvbmNhdChsaW5lcyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jb252ZXJ0ZXIucGFyc2VSdW50aW1lLnBhcnNlZExpbmVOdW1iZXIgKz0gbGluZXMubGVuZ3RoO1xuICAgIH07XG4gICAgUmVzdWx0LnByb3RvdHlwZS5wcm9jZXNzRXJyb3IgPSBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbnZlcnRlci5wYXJzZVJ1bnRpbWUuc3Vic2NyaWJlICYmIHRoaXMuY29udmVydGVyLnBhcnNlUnVudGltZS5zdWJzY3JpYmUub25FcnJvcikge1xuICAgICAgICAgICAgdGhpcy5jb252ZXJ0ZXIucGFyc2VSdW50aW1lLnN1YnNjcmliZS5vbkVycm9yKGVycik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY29udmVydGVyLnBhcnNlUnVudGltZS50aGVuICYmIHRoaXMuY29udmVydGVyLnBhcnNlUnVudGltZS50aGVuLm9ucmVqZWN0ZWQpIHtcbiAgICAgICAgICAgIHRoaXMuY29udmVydGVyLnBhcnNlUnVudGltZS50aGVuLm9ucmVqZWN0ZWQoZXJyKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgUmVzdWx0LnByb3RvdHlwZS5lbmRQcm9jZXNzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5jb252ZXJ0ZXIucGFyc2VSdW50aW1lLnRoZW4gJiYgdGhpcy5jb252ZXJ0ZXIucGFyc2VSdW50aW1lLnRoZW4ub25mdWxmaWxsZWQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm5lZWRFbWl0QWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb252ZXJ0ZXIucGFyc2VSdW50aW1lLnRoZW4ub25mdWxmaWxsZWQodGhpcy5maW5hbFJlc3VsdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnZlcnRlci5wYXJzZVJ1bnRpbWUudGhlbi5vbmZ1bGZpbGxlZChbXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY29udmVydGVyLnBhcnNlUnVudGltZS5zdWJzY3JpYmUgJiYgdGhpcy5jb252ZXJ0ZXIucGFyc2VSdW50aW1lLnN1YnNjcmliZS5vbkNvbXBsZXRlZCkge1xuICAgICAgICAgICAgdGhpcy5jb252ZXJ0ZXIucGFyc2VSdW50aW1lLnN1YnNjcmliZS5vbkNvbXBsZXRlZCgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLm5lZWRQdXNoRG93bnN0cmVhbSAmJiB0aGlzLmNvbnZlcnRlci5wYXJzZVBhcmFtLmRvd25zdHJlYW1Gb3JtYXQgPT09IFwiYXJyYXlcIikge1xuICAgICAgICAgICAgcHVzaERvd25zdHJlYW0odGhpcy5jb252ZXJ0ZXIsIFwiXVwiICsgb3NfMS5FT0wpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gUmVzdWx0O1xufSgpKTtcbmV4cG9ydHMuUmVzdWx0ID0gUmVzdWx0O1xuZnVuY3Rpb24gcHJvY2Vzc0xpbmVCeUxpbmUobGluZXMsIGNvbnYsIG9mZnNldCwgbmVlZFB1c2hEb3duc3RyZWFtLCBjYikge1xuICAgIGlmIChvZmZzZXQgPj0gbGluZXMubGVuZ3RoKSB7XG4gICAgICAgIGNiKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAoY29udi5wYXJzZVJ1bnRpbWUuc3Vic2NyaWJlICYmIGNvbnYucGFyc2VSdW50aW1lLnN1YnNjcmliZS5vbk5leHQpIHtcbiAgICAgICAgICAgIHZhciBob29rXzEgPSBjb252LnBhcnNlUnVudGltZS5zdWJzY3JpYmUub25OZXh0O1xuICAgICAgICAgICAgdmFyIG5leHRMaW5lXzEgPSBsaW5lc1tvZmZzZXRdO1xuICAgICAgICAgICAgdmFyIHJlcyA9IGhvb2tfMShuZXh0TGluZV8xLCBjb252LnBhcnNlUnVudGltZS5wYXJzZWRMaW5lTnVtYmVyICsgb2Zmc2V0KTtcbiAgICAgICAgICAgIG9mZnNldCsrO1xuICAgICAgICAgICAgLy8gaWYgKGlzQXN5bmMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaWYgKHJlcyAmJiByZXMudGhlbikge1xuICAgICAgICAgICAgICAgIHJlcy50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc1JlY3Vyc2l2ZShsaW5lcywgaG9va18xLCBjb252LCBvZmZzZXQsIG5lZWRQdXNoRG93bnN0cmVhbSwgY2IsIG5leHRMaW5lXzEpO1xuICAgICAgICAgICAgICAgIH0sIGNiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIHByb2Nlc3NSZWN1cnNpdmUobGluZXMsIGhvb2ssIGNvbnYsIG9mZnNldCwgbmVlZFB1c2hEb3duc3RyZWFtLCBjYiwgbmV4dExpbmUsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICBpZiAobmVlZFB1c2hEb3duc3RyZWFtKSB7XG4gICAgICAgICAgICAgICAgICAgIHB1c2hEb3duc3RyZWFtKGNvbnYsIG5leHRMaW5lXzEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB3aGlsZSAob2Zmc2V0IDwgbGluZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBsaW5lID0gbGluZXNbb2Zmc2V0XTtcbiAgICAgICAgICAgICAgICAgICAgaG9va18xKGxpbmUsIGNvbnYucGFyc2VSdW50aW1lLnBhcnNlZExpbmVOdW1iZXIgKyBvZmZzZXQpO1xuICAgICAgICAgICAgICAgICAgICBvZmZzZXQrKztcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5lZWRQdXNoRG93bnN0cmVhbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHVzaERvd25zdHJlYW0oY29udiwgbGluZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2IoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIH0gZWxzZSBpZiAoaXNBc3luYyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgLy8gICAocmVzIGFzIFByb21pc2VMaWtlPHZvaWQ+KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIC8vICAgICBwcm9jZXNzUmVjdXJzaXZlKGxpbmVzLCBob29rLCBjb252LCBvZmZzZXQsIG5lZWRQdXNoRG93bnN0cmVhbSwgY2IsIG5leHRMaW5lLCB0cnVlKTtcbiAgICAgICAgICAgIC8vICAgfSwgY2IpO1xuICAgICAgICAgICAgLy8gfSBlbHNlIGlmIChpc0FzeW5jID09PSBmYWxzZSkge1xuICAgICAgICAgICAgLy8gICBwcm9jZXNzUmVjdXJzaXZlKGxpbmVzLCBob29rLCBjb252LCBvZmZzZXQsIG5lZWRQdXNoRG93bnN0cmVhbSwgY2IsIG5leHRMaW5lLCBmYWxzZSk7XG4gICAgICAgICAgICAvLyB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAobmVlZFB1c2hEb3duc3RyZWFtKSB7XG4gICAgICAgICAgICAgICAgd2hpbGUgKG9mZnNldCA8IGxpbmVzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbGluZSA9IGxpbmVzW29mZnNldCsrXTtcbiAgICAgICAgICAgICAgICAgICAgcHVzaERvd25zdHJlYW0oY29udiwgbGluZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2IoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmZ1bmN0aW9uIHByb2Nlc3NSZWN1cnNpdmUobGluZXMsIGhvb2ssIGNvbnYsIG9mZnNldCwgbmVlZFB1c2hEb3duc3RyZWFtLCBjYiwgcmVzKSB7XG4gICAgaWYgKG5lZWRQdXNoRG93bnN0cmVhbSkge1xuICAgICAgICBwdXNoRG93bnN0cmVhbShjb252LCByZXMpO1xuICAgIH1cbiAgICBwcm9jZXNzTGluZUJ5TGluZShsaW5lcywgY29udiwgb2Zmc2V0LCBuZWVkUHVzaERvd25zdHJlYW0sIGNiKTtcbn1cbmZ1bmN0aW9uIHB1c2hEb3duc3RyZWFtKGNvbnYsIHJlcykge1xuICAgIGlmICh0eXBlb2YgcmVzID09PSBcIm9iamVjdFwiICYmICFjb252Lm9wdGlvbnMub2JqZWN0TW9kZSkge1xuICAgICAgICB2YXIgZGF0YSA9IEpTT04uc3RyaW5naWZ5KHJlcyk7XG4gICAgICAgIGNvbnYucHVzaChkYXRhICsgKGNvbnYucGFyc2VQYXJhbS5kb3duc3RyZWFtRm9ybWF0ID09PSBcImFycmF5XCIgPyBcIixcIiArIG9zXzEuRU9MIDogb3NfMS5FT0wpLCBcInV0ZjhcIik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb252LnB1c2gocmVzKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZXN1bHQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/Result.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/dataClean.js":
/*!************************************************!*\
  !*** ./node_modules/csvtojson/v2/dataClean.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar strip_bom_1 = __importDefault(__webpack_require__(/*! strip-bom */ \"(rsc)/./node_modules/csvtojson/node_modules/strip-bom/index.js\"));\n/**\n * For each data chunk coming to parser:\n * 1. append the data to the buffer that is left from last chunk\n * 2. check if utf8 chars being split, if does, stripe the bytes and add to left buffer.\n * 3. stripBom\n */\nfunction prepareData(chunk, runtime) {\n    var workChunk = concatLeftChunk(chunk, runtime);\n    runtime.csvLineBuffer = undefined;\n    var cleanCSVString = cleanUtf8Split(workChunk, runtime).toString(\"utf8\");\n    if (runtime.started === false) {\n        return strip_bom_1.default(cleanCSVString);\n    }\n    else {\n        return cleanCSVString;\n    }\n}\nexports.prepareData = prepareData;\n/**\n *  append data to buffer that is left form last chunk\n */\nfunction concatLeftChunk(chunk, runtime) {\n    if (runtime.csvLineBuffer && runtime.csvLineBuffer.length > 0) {\n        return Buffer.concat([runtime.csvLineBuffer, chunk]);\n    }\n    else {\n        return chunk;\n    }\n}\n/**\n * check if utf8 chars being split, if does, stripe the bytes and add to left buffer.\n */\nfunction cleanUtf8Split(chunk, runtime) {\n    var idx = chunk.length - 1;\n    /**\n     * From Keyang:\n     * The code below is to check if a single utf8 char (which could be multiple bytes) being split.\n     * If the char being split, the buffer from two chunk needs to be concat\n     * check how utf8 being encoded to understand the code below.\n     * If anyone has any better way to do this, please let me know.\n     */\n    if ((chunk[idx] & 1 << 7) != 0) {\n        while ((chunk[idx] & 3 << 6) === 128) {\n            idx--;\n        }\n        idx--;\n    }\n    if (idx != chunk.length - 1) {\n        runtime.csvLineBuffer = chunk.slice(idx + 1);\n        return chunk.slice(0, idx + 1);\n        // var _cb=cb;\n        // var self=this;\n        // cb=function(){\n        //   if (self._csvLineBuffer){\n        //     self._csvLineBuffer=Buffer.concat([bufFromString(self._csvLineBuffer,\"utf8\"),left]);\n        //   }else{\n        //     self._csvLineBuffer=left;\n        //   }\n        //   _cb();\n        // }\n    }\n    else {\n        return chunk;\n    }\n}\n//# sourceMappingURL=dataClean.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL2RhdGFDbGVhbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtDQUFrQyxtQkFBTyxDQUFDLGlGQUFXO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbmFseXRpY3MtZGFzaGJvYXJkLWFzc2Vzc21lbnQvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL2RhdGFDbGVhbi5qcz81ZTI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHN0cmlwX2JvbV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJzdHJpcC1ib21cIikpO1xuLyoqXG4gKiBGb3IgZWFjaCBkYXRhIGNodW5rIGNvbWluZyB0byBwYXJzZXI6XG4gKiAxLiBhcHBlbmQgdGhlIGRhdGEgdG8gdGhlIGJ1ZmZlciB0aGF0IGlzIGxlZnQgZnJvbSBsYXN0IGNodW5rXG4gKiAyLiBjaGVjayBpZiB1dGY4IGNoYXJzIGJlaW5nIHNwbGl0LCBpZiBkb2VzLCBzdHJpcGUgdGhlIGJ5dGVzIGFuZCBhZGQgdG8gbGVmdCBidWZmZXIuXG4gKiAzLiBzdHJpcEJvbVxuICovXG5mdW5jdGlvbiBwcmVwYXJlRGF0YShjaHVuaywgcnVudGltZSkge1xuICAgIHZhciB3b3JrQ2h1bmsgPSBjb25jYXRMZWZ0Q2h1bmsoY2h1bmssIHJ1bnRpbWUpO1xuICAgIHJ1bnRpbWUuY3N2TGluZUJ1ZmZlciA9IHVuZGVmaW5lZDtcbiAgICB2YXIgY2xlYW5DU1ZTdHJpbmcgPSBjbGVhblV0ZjhTcGxpdCh3b3JrQ2h1bmssIHJ1bnRpbWUpLnRvU3RyaW5nKFwidXRmOFwiKTtcbiAgICBpZiAocnVudGltZS5zdGFydGVkID09PSBmYWxzZSkge1xuICAgICAgICByZXR1cm4gc3RyaXBfYm9tXzEuZGVmYXVsdChjbGVhbkNTVlN0cmluZyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gY2xlYW5DU1ZTdHJpbmc7XG4gICAgfVxufVxuZXhwb3J0cy5wcmVwYXJlRGF0YSA9IHByZXBhcmVEYXRhO1xuLyoqXG4gKiAgYXBwZW5kIGRhdGEgdG8gYnVmZmVyIHRoYXQgaXMgbGVmdCBmb3JtIGxhc3QgY2h1bmtcbiAqL1xuZnVuY3Rpb24gY29uY2F0TGVmdENodW5rKGNodW5rLCBydW50aW1lKSB7XG4gICAgaWYgKHJ1bnRpbWUuY3N2TGluZUJ1ZmZlciAmJiBydW50aW1lLmNzdkxpbmVCdWZmZXIubGVuZ3RoID4gMCkge1xuICAgICAgICByZXR1cm4gQnVmZmVyLmNvbmNhdChbcnVudGltZS5jc3ZMaW5lQnVmZmVyLCBjaHVua10pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGNodW5rO1xuICAgIH1cbn1cbi8qKlxuICogY2hlY2sgaWYgdXRmOCBjaGFycyBiZWluZyBzcGxpdCwgaWYgZG9lcywgc3RyaXBlIHRoZSBieXRlcyBhbmQgYWRkIHRvIGxlZnQgYnVmZmVyLlxuICovXG5mdW5jdGlvbiBjbGVhblV0ZjhTcGxpdChjaHVuaywgcnVudGltZSkge1xuICAgIHZhciBpZHggPSBjaHVuay5sZW5ndGggLSAxO1xuICAgIC8qKlxuICAgICAqIEZyb20gS2V5YW5nOlxuICAgICAqIFRoZSBjb2RlIGJlbG93IGlzIHRvIGNoZWNrIGlmIGEgc2luZ2xlIHV0ZjggY2hhciAod2hpY2ggY291bGQgYmUgbXVsdGlwbGUgYnl0ZXMpIGJlaW5nIHNwbGl0LlxuICAgICAqIElmIHRoZSBjaGFyIGJlaW5nIHNwbGl0LCB0aGUgYnVmZmVyIGZyb20gdHdvIGNodW5rIG5lZWRzIHRvIGJlIGNvbmNhdFxuICAgICAqIGNoZWNrIGhvdyB1dGY4IGJlaW5nIGVuY29kZWQgdG8gdW5kZXJzdGFuZCB0aGUgY29kZSBiZWxvdy5cbiAgICAgKiBJZiBhbnlvbmUgaGFzIGFueSBiZXR0ZXIgd2F5IHRvIGRvIHRoaXMsIHBsZWFzZSBsZXQgbWUga25vdy5cbiAgICAgKi9cbiAgICBpZiAoKGNodW5rW2lkeF0gJiAxIDw8IDcpICE9IDApIHtcbiAgICAgICAgd2hpbGUgKChjaHVua1tpZHhdICYgMyA8PCA2KSA9PT0gMTI4KSB7XG4gICAgICAgICAgICBpZHgtLTtcbiAgICAgICAgfVxuICAgICAgICBpZHgtLTtcbiAgICB9XG4gICAgaWYgKGlkeCAhPSBjaHVuay5sZW5ndGggLSAxKSB7XG4gICAgICAgIHJ1bnRpbWUuY3N2TGluZUJ1ZmZlciA9IGNodW5rLnNsaWNlKGlkeCArIDEpO1xuICAgICAgICByZXR1cm4gY2h1bmsuc2xpY2UoMCwgaWR4ICsgMSk7XG4gICAgICAgIC8vIHZhciBfY2I9Y2I7XG4gICAgICAgIC8vIHZhciBzZWxmPXRoaXM7XG4gICAgICAgIC8vIGNiPWZ1bmN0aW9uKCl7XG4gICAgICAgIC8vICAgaWYgKHNlbGYuX2NzdkxpbmVCdWZmZXIpe1xuICAgICAgICAvLyAgICAgc2VsZi5fY3N2TGluZUJ1ZmZlcj1CdWZmZXIuY29uY2F0KFtidWZGcm9tU3RyaW5nKHNlbGYuX2NzdkxpbmVCdWZmZXIsXCJ1dGY4XCIpLGxlZnRdKTtcbiAgICAgICAgLy8gICB9ZWxzZXtcbiAgICAgICAgLy8gICAgIHNlbGYuX2NzdkxpbmVCdWZmZXI9bGVmdDtcbiAgICAgICAgLy8gICB9XG4gICAgICAgIC8vICAgX2NiKCk7XG4gICAgICAgIC8vIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBjaHVuaztcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhQ2xlYW4uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/dataClean.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/fileline.js":
/*!***********************************************!*\
  !*** ./node_modules/csvtojson/v2/fileline.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar getEol_1 = __importDefault(__webpack_require__(/*! ./getEol */ \"(rsc)/./node_modules/csvtojson/v2/getEol.js\"));\n// const getEol = require(\"./getEol\");\n/**\n * convert data chunk to file lines array\n * @param  {string} data  data chunk as utf8 string\n * @param  {object} param Converter param object\n * @return {Object}   {lines:[line1,line2...],partial:String}\n */\nfunction stringToLines(data, param) {\n    var eol = getEol_1.default(data, param);\n    var lines = data.split(eol);\n    var partial = lines.pop() || \"\";\n    return { lines: lines, partial: partial };\n}\nexports.stringToLines = stringToLines;\n;\n//# sourceMappingURL=fileline.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL2ZpbGVsaW5lLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCLG1CQUFPLENBQUMsNkRBQVU7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQixZQUFZLFdBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYW5hbHl0aWNzLWRhc2hib2FyZC1hc3Nlc3NtZW50Ly4vbm9kZV9tb2R1bGVzL2NzdnRvanNvbi92Mi9maWxlbGluZS5qcz9hZDIzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGdldEVvbF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2dldEVvbFwiKSk7XG4vLyBjb25zdCBnZXRFb2wgPSByZXF1aXJlKFwiLi9nZXRFb2xcIik7XG4vKipcbiAqIGNvbnZlcnQgZGF0YSBjaHVuayB0byBmaWxlIGxpbmVzIGFycmF5XG4gKiBAcGFyYW0gIHtzdHJpbmd9IGRhdGEgIGRhdGEgY2h1bmsgYXMgdXRmOCBzdHJpbmdcbiAqIEBwYXJhbSAge29iamVjdH0gcGFyYW0gQ29udmVydGVyIHBhcmFtIG9iamVjdFxuICogQHJldHVybiB7T2JqZWN0fSAgIHtsaW5lczpbbGluZTEsbGluZTIuLi5dLHBhcnRpYWw6U3RyaW5nfVxuICovXG5mdW5jdGlvbiBzdHJpbmdUb0xpbmVzKGRhdGEsIHBhcmFtKSB7XG4gICAgdmFyIGVvbCA9IGdldEVvbF8xLmRlZmF1bHQoZGF0YSwgcGFyYW0pO1xuICAgIHZhciBsaW5lcyA9IGRhdGEuc3BsaXQoZW9sKTtcbiAgICB2YXIgcGFydGlhbCA9IGxpbmVzLnBvcCgpIHx8IFwiXCI7XG4gICAgcmV0dXJuIHsgbGluZXM6IGxpbmVzLCBwYXJ0aWFsOiBwYXJ0aWFsIH07XG59XG5leHBvcnRzLnN0cmluZ1RvTGluZXMgPSBzdHJpbmdUb0xpbmVzO1xuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsZWxpbmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/fileline.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/getEol.js":
/*!*********************************************!*\
  !*** ./node_modules/csvtojson/v2/getEol.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//return first eol found from a data chunk.\nfunction default_1(data, param) {\n    if (!param.eol && data) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            if (data[i] === \"\\r\") {\n                if (data[i + 1] === \"\\n\") {\n                    param.eol = \"\\r\\n\";\n                    break;\n                }\n                else if (data[i + 1]) {\n                    param.eol = \"\\r\";\n                    break;\n                }\n            }\n            else if (data[i] === \"\\n\") {\n                param.eol = \"\\n\";\n                break;\n            }\n        }\n    }\n    return param.eol || \"\\n\";\n}\nexports[\"default\"] = default_1;\n;\n//# sourceMappingURL=getEol.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL2dldEVvbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsU0FBUztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZTtBQUNmO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbmFseXRpY3MtZGFzaGJvYXJkLWFzc2Vzc21lbnQvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL2dldEVvbC5qcz83MjY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy9yZXR1cm4gZmlyc3QgZW9sIGZvdW5kIGZyb20gYSBkYXRhIGNodW5rLlxuZnVuY3Rpb24gZGVmYXVsdF8xKGRhdGEsIHBhcmFtKSB7XG4gICAgaWYgKCFwYXJhbS5lb2wgJiYgZGF0YSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gZGF0YS5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgaWYgKGRhdGFbaV0gPT09IFwiXFxyXCIpIHtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YVtpICsgMV0gPT09IFwiXFxuXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyYW0uZW9sID0gXCJcXHJcXG5cIjtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGRhdGFbaSArIDFdKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcmFtLmVvbCA9IFwiXFxyXCI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGRhdGFbaV0gPT09IFwiXFxuXCIpIHtcbiAgICAgICAgICAgICAgICBwYXJhbS5lb2wgPSBcIlxcblwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBwYXJhbS5lb2wgfHwgXCJcXG5cIjtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGRlZmF1bHRfMTtcbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEVvbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/getEol.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/index.js":
/*!********************************************!*\
  !*** ./node_modules/csvtojson/v2/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar Converter_1 = __webpack_require__(/*! ./Converter */ \"(rsc)/./node_modules/csvtojson/v2/Converter.js\");\nvar helper = function (param, options) {\n    return new Converter_1.Converter(param, options);\n};\nhelper[\"csv\"] = helper;\nhelper[\"Converter\"] = Converter_1.Converter;\nmodule.exports = helper;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2Isa0JBQWtCLG1CQUFPLENBQUMsbUVBQWE7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbmFseXRpY3MtZGFzaGJvYXJkLWFzc2Vzc21lbnQvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL2luZGV4LmpzP2QxODQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgQ29udmVydGVyXzEgPSByZXF1aXJlKFwiLi9Db252ZXJ0ZXJcIik7XG52YXIgaGVscGVyID0gZnVuY3Rpb24gKHBhcmFtLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5ldyBDb252ZXJ0ZXJfMS5Db252ZXJ0ZXIocGFyYW0sIG9wdGlvbnMpO1xufTtcbmhlbHBlcltcImNzdlwiXSA9IGhlbHBlcjtcbmhlbHBlcltcIkNvbnZlcnRlclwiXSA9IENvbnZlcnRlcl8xLkNvbnZlcnRlcjtcbm1vZHVsZS5leHBvcnRzID0gaGVscGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/lineToJson.js":
/*!*************************************************!*\
  !*** ./node_modules/csvtojson/v2/lineToJson.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar CSVError_1 = __importDefault(__webpack_require__(/*! ./CSVError */ \"(rsc)/./node_modules/csvtojson/v2/CSVError.js\"));\nvar set_1 = __importDefault(__webpack_require__(/*! lodash/set */ \"(rsc)/./node_modules/lodash/set.js\"));\nvar numReg = /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/;\nfunction default_1(csvRows, conv) {\n    var res = [];\n    for (var i = 0, len = csvRows.length; i < len; i++) {\n        var r = processRow(csvRows[i], conv, i);\n        if (r) {\n            res.push(r);\n        }\n    }\n    return res;\n}\nexports[\"default\"] = default_1;\n;\nfunction processRow(row, conv, index) {\n    if (conv.parseParam.checkColumn && conv.parseRuntime.headers && row.length !== conv.parseRuntime.headers.length) {\n        throw (CSVError_1.default.column_mismatched(conv.parseRuntime.parsedLineNumber + index));\n    }\n    var headRow = conv.parseRuntime.headers || [];\n    var resultRow = convertRowToJson(row, headRow, conv);\n    if (resultRow) {\n        return resultRow;\n    }\n    else {\n        return null;\n    }\n}\nfunction convertRowToJson(row, headRow, conv) {\n    var hasValue = false;\n    var resultRow = {};\n    for (var i = 0, len = row.length; i < len; i++) {\n        var item = row[i];\n        if (conv.parseParam.ignoreEmpty && item === '') {\n            continue;\n        }\n        hasValue = true;\n        var head = headRow[i];\n        if (!head || head === \"\") {\n            head = headRow[i] = \"field\" + (i + 1);\n        }\n        var convFunc = getConvFunc(head, i, conv);\n        if (convFunc) {\n            var convRes = convFunc(item, head, resultRow, row, i);\n            if (convRes !== undefined) {\n                setPath(resultRow, head, convRes, conv, i);\n            }\n        }\n        else {\n            // var flag = getFlag(head, i, param);\n            // if (flag === 'omit') {\n            //   continue;\n            // }\n            if (conv.parseParam.checkType) {\n                var convertFunc = checkType(item, head, i, conv);\n                item = convertFunc(item);\n            }\n            if (item !== undefined) {\n                setPath(resultRow, head, item, conv, i);\n            }\n        }\n    }\n    if (hasValue) {\n        return resultRow;\n    }\n    else {\n        return null;\n    }\n}\nvar builtInConv = {\n    \"string\": stringType,\n    \"number\": numberType,\n    \"omit\": function () { }\n};\nfunction getConvFunc(head, i, conv) {\n    if (conv.parseRuntime.columnConv[i] !== undefined) {\n        return conv.parseRuntime.columnConv[i];\n    }\n    else {\n        var flag = conv.parseParam.colParser[head];\n        if (flag === undefined) {\n            return conv.parseRuntime.columnConv[i] = null;\n        }\n        if (typeof flag === \"object\") {\n            flag = flag.cellParser || \"string\";\n        }\n        if (typeof flag === \"string\") {\n            flag = flag.trim().toLowerCase();\n            var builtInFunc = builtInConv[flag];\n            if (builtInFunc) {\n                return conv.parseRuntime.columnConv[i] = builtInFunc;\n            }\n            else {\n                return conv.parseRuntime.columnConv[i] = null;\n            }\n        }\n        else if (typeof flag === \"function\") {\n            return conv.parseRuntime.columnConv[i] = flag;\n        }\n        else {\n            return conv.parseRuntime.columnConv[i] = null;\n        }\n    }\n}\nfunction setPath(resultJson, head, value, conv, headIdx) {\n    if (!conv.parseRuntime.columnValueSetter[headIdx]) {\n        if (conv.parseParam.flatKeys) {\n            conv.parseRuntime.columnValueSetter[headIdx] = flatSetter;\n        }\n        else {\n            if (head.indexOf(\".\") > -1) {\n                var headArr = head.split(\".\");\n                var jsonHead = true;\n                while (headArr.length > 0) {\n                    var headCom = headArr.shift();\n                    if (headCom.length === 0) {\n                        jsonHead = false;\n                        break;\n                    }\n                }\n                if (!jsonHead || conv.parseParam.colParser[head] && conv.parseParam.colParser[head].flat) {\n                    conv.parseRuntime.columnValueSetter[headIdx] = flatSetter;\n                }\n                else {\n                    conv.parseRuntime.columnValueSetter[headIdx] = jsonSetter;\n                }\n            }\n            else {\n                conv.parseRuntime.columnValueSetter[headIdx] = flatSetter;\n            }\n        }\n    }\n    if (conv.parseParam.nullObject === true && value === \"null\") {\n        value = null;\n    }\n    conv.parseRuntime.columnValueSetter[headIdx](resultJson, head, value);\n    // flatSetter(resultJson, head, value);\n}\nfunction flatSetter(resultJson, head, value) {\n    resultJson[head] = value;\n}\nfunction jsonSetter(resultJson, head, value) {\n    set_1.default(resultJson, head, value);\n}\nfunction checkType(item, head, headIdx, conv) {\n    if (conv.parseRuntime.headerType[headIdx]) {\n        return conv.parseRuntime.headerType[headIdx];\n    }\n    else if (head.indexOf('number#!') > -1) {\n        return conv.parseRuntime.headerType[headIdx] = numberType;\n    }\n    else if (head.indexOf('string#!') > -1) {\n        return conv.parseRuntime.headerType[headIdx] = stringType;\n    }\n    else if (conv.parseParam.checkType) {\n        return conv.parseRuntime.headerType[headIdx] = dynamicType;\n    }\n    else {\n        return conv.parseRuntime.headerType[headIdx] = stringType;\n    }\n}\nfunction numberType(item) {\n    var rtn = parseFloat(item);\n    if (isNaN(rtn)) {\n        return item;\n    }\n    return rtn;\n}\nfunction stringType(item) {\n    return item.toString();\n}\nfunction dynamicType(item) {\n    var trimed = item.trim();\n    if (trimed === \"\") {\n        return stringType(item);\n    }\n    if (numReg.test(trimed)) {\n        return numberType(item);\n    }\n    else if (trimed.length === 5 && trimed.toLowerCase() === \"false\" || trimed.length === 4 && trimed.toLowerCase() === \"true\") {\n        return booleanType(item);\n    }\n    else if (trimed[0] === \"{\" && trimed[trimed.length - 1] === \"}\" || trimed[0] === \"[\" && trimed[trimed.length - 1] === \"]\") {\n        return jsonType(item);\n    }\n    else {\n        return stringType(item);\n    }\n}\nfunction booleanType(item) {\n    var trimed = item.trim();\n    if (trimed.length === 5 && trimed.toLowerCase() === \"false\") {\n        return false;\n    }\n    else {\n        return true;\n    }\n}\nfunction jsonType(item) {\n    try {\n        return JSON.parse(item);\n    }\n    catch (e) {\n        return item;\n    }\n}\n//# sourceMappingURL=lineToJson.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/lineToJson.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/rowSplit.js":
/*!***********************************************!*\
  !*** ./node_modules/csvtojson/v2/rowSplit.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar getEol_1 = __importDefault(__webpack_require__(/*! ./getEol */ \"(rsc)/./node_modules/csvtojson/v2/getEol.js\"));\nvar util_1 = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/csvtojson/v2/util.js\");\nvar defaulDelimiters = [\",\", \"|\", \"\\t\", \";\", \":\"];\nvar RowSplit = /** @class */ (function () {\n    function RowSplit(conv) {\n        this.conv = conv;\n        this.cachedRegExp = {};\n        this.delimiterEmitted = false;\n        this._needEmitDelimiter = undefined;\n        this.quote = conv.parseParam.quote;\n        this.trim = conv.parseParam.trim;\n        this.escape = conv.parseParam.escape;\n    }\n    Object.defineProperty(RowSplit.prototype, \"needEmitDelimiter\", {\n        get: function () {\n            if (this._needEmitDelimiter === undefined) {\n                this._needEmitDelimiter = this.conv.listeners(\"delimiter\").length > 0;\n            }\n            return this._needEmitDelimiter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RowSplit.prototype.parse = function (fileline) {\n        if (fileline.length === 0 || (this.conv.parseParam.ignoreEmpty && fileline.trim().length === 0)) {\n            return { cells: [], closed: true };\n        }\n        var quote = this.quote;\n        var trim = this.trim;\n        var escape = this.escape;\n        if (this.conv.parseRuntime.delimiter instanceof Array || this.conv.parseRuntime.delimiter.toLowerCase() === \"auto\") {\n            this.conv.parseRuntime.delimiter = this.getDelimiter(fileline);\n        }\n        if (this.needEmitDelimiter && !this.delimiterEmitted) {\n            this.conv.emit(\"delimiter\", this.conv.parseRuntime.delimiter);\n            this.delimiterEmitted = true;\n        }\n        var delimiter = this.conv.parseRuntime.delimiter;\n        var rowArr = fileline.split(delimiter);\n        if (quote === \"off\") {\n            if (trim) {\n                for (var i = 0; i < rowArr.length; i++) {\n                    rowArr[i] = rowArr[i].trim();\n                }\n            }\n            return { cells: rowArr, closed: true };\n        }\n        else {\n            return this.toCSVRow(rowArr, trim, quote, delimiter);\n        }\n    };\n    RowSplit.prototype.toCSVRow = function (rowArr, trim, quote, delimiter) {\n        var row = [];\n        var inquote = false;\n        var quoteBuff = '';\n        for (var i = 0, rowLen = rowArr.length; i < rowLen; i++) {\n            var e = rowArr[i];\n            if (!inquote && trim) {\n                e = util_1.trimLeft(e);\n            }\n            var len = e.length;\n            if (!inquote) {\n                if (len === 2 && e === this.quote + this.quote) {\n                    row.push(\"\");\n                    continue;\n                }\n                else if (this.isQuoteOpen(e)) { //quote open\n                    e = e.substr(1);\n                    if (this.isQuoteClose(e)) { //quote close\n                        e = e.substring(0, e.lastIndexOf(quote));\n                        e = this.escapeQuote(e);\n                        row.push(e);\n                        continue;\n                    }\n                    else if (e.indexOf(quote) !== -1) {\n                        var count = 0;\n                        var prev = \"\";\n                        for (var _i = 0, e_1 = e; _i < e_1.length; _i++) {\n                            var c = e_1[_i];\n                            // count quotes only if previous character is not escape char\n                            if (c === quote && prev !== this.escape) {\n                                count++;\n                                prev = \"\";\n                            }\n                            else {\n                                // save previous char to temp variable\n                                prev = c;\n                            }\n                        }\n                        if (count % 2 === 1) {\n                            if (trim) {\n                                e = util_1.trimRight(e);\n                            }\n                            row.push(quote + e);\n                            continue;\n                        }\n                        else {\n                            inquote = true;\n                            quoteBuff += e;\n                            continue;\n                        }\n                    }\n                    else {\n                        inquote = true;\n                        quoteBuff += e;\n                        continue;\n                    }\n                }\n                else {\n                    if (trim) {\n                        e = util_1.trimRight(e);\n                    }\n                    row.push(e);\n                    continue;\n                }\n            }\n            else { //previous quote not closed\n                if (this.isQuoteClose(e)) { //close double quote\n                    inquote = false;\n                    e = e.substr(0, len - 1);\n                    quoteBuff += delimiter + e;\n                    quoteBuff = this.escapeQuote(quoteBuff);\n                    if (trim) {\n                        quoteBuff = util_1.trimRight(quoteBuff);\n                    }\n                    row.push(quoteBuff);\n                    quoteBuff = \"\";\n                }\n                else {\n                    quoteBuff += delimiter + e;\n                }\n            }\n        }\n        // if (!inquote && param._needFilterRow) {\n        //   row = filterRow(row, param);\n        // }\n        return { cells: row, closed: !inquote };\n    };\n    RowSplit.prototype.getDelimiter = function (fileline) {\n        var checker;\n        if (this.conv.parseParam.delimiter === \"auto\") {\n            checker = defaulDelimiters;\n        }\n        else if (this.conv.parseParam.delimiter instanceof Array) {\n            checker = this.conv.parseParam.delimiter;\n        }\n        else {\n            return this.conv.parseParam.delimiter;\n        }\n        var count = 0;\n        var rtn = \",\";\n        checker.forEach(function (delim) {\n            var delimCount = fileline.split(delim).length;\n            if (delimCount > count) {\n                rtn = delim;\n                count = delimCount;\n            }\n        });\n        return rtn;\n    };\n    RowSplit.prototype.isQuoteOpen = function (str) {\n        var quote = this.quote;\n        var escape = this.escape;\n        return str[0] === quote && (str[1] !== quote ||\n            str[1] === escape && (str[2] === quote || str.length === 2));\n    };\n    RowSplit.prototype.isQuoteClose = function (str) {\n        var quote = this.quote;\n        var escape = this.escape;\n        if (this.conv.parseParam.trim) {\n            str = util_1.trimRight(str);\n        }\n        var count = 0;\n        var idx = str.length - 1;\n        while (str[idx] === quote || str[idx] === escape) {\n            idx--;\n            count++;\n        }\n        return count % 2 !== 0;\n    };\n    // private twoDoubleQuote(str: string): string {\n    //   var twoQuote = this.quote + this.quote;\n    //   var curIndex = -1;\n    //   while ((curIndex = str.indexOf(twoQuote, curIndex)) > -1) {\n    //     str = str.substring(0, curIndex) + str.substring(++curIndex);\n    //   }\n    //   return str;\n    // }\n    RowSplit.prototype.escapeQuote = function (segment) {\n        var key = \"es|\" + this.quote + \"|\" + this.escape;\n        if (this.cachedRegExp[key] === undefined) {\n            this.cachedRegExp[key] = new RegExp('\\\\' + this.escape + '\\\\' + this.quote, 'g');\n        }\n        var regExp = this.cachedRegExp[key];\n        // console.log(regExp,segment);\n        return segment.replace(regExp, this.quote);\n    };\n    RowSplit.prototype.parseMultiLines = function (lines) {\n        var csvLines = [];\n        var left = \"\";\n        while (lines.length) {\n            var line = left + lines.shift();\n            var row = this.parse(line);\n            if (row.cells.length === 0 && this.conv.parseParam.ignoreEmpty) {\n                continue;\n            }\n            if (row.closed || this.conv.parseParam.alwaysSplitAtEOL) {\n                if (this.conv.parseRuntime.selectedColumns) {\n                    csvLines.push(util_1.filterArray(row.cells, this.conv.parseRuntime.selectedColumns));\n                }\n                else {\n                    csvLines.push(row.cells);\n                }\n                left = \"\";\n            }\n            else {\n                left = line + (getEol_1.default(line, this.conv.parseRuntime) || \"\\n\");\n            }\n        }\n        return { rowsCells: csvLines, partial: left };\n    };\n    return RowSplit;\n}());\nexports.RowSplit = RowSplit;\n//# sourceMappingURL=rowSplit.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/rowSplit.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/csvtojson/v2/util.js":
/*!*******************************************!*\
  !*** ./node_modules/csvtojson/v2/util.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nfunction bufFromString(str) {\n    var length = Buffer.byteLength(str);\n    var buffer = Buffer.allocUnsafe\n        ? Buffer.allocUnsafe(length)\n        : new Buffer(length);\n    buffer.write(str);\n    return buffer;\n}\nexports.bufFromString = bufFromString;\nfunction emptyBuffer() {\n    var buffer = Buffer.allocUnsafe\n        ? Buffer.allocUnsafe(0)\n        : new Buffer(0);\n    return buffer;\n}\nexports.emptyBuffer = emptyBuffer;\nfunction filterArray(arr, filter) {\n    var rtn = [];\n    for (var i = 0; i < arr.length; i++) {\n        if (filter.indexOf(i) > -1) {\n            rtn.push(arr[i]);\n        }\n    }\n    return rtn;\n}\nexports.filterArray = filterArray;\nexports.trimLeft = String.prototype.trimLeft ? function trimLeftNative(str) {\n    return str.trimLeft();\n} : function trimLeftRegExp(str) {\n    return str.replace(/^\\s+/, \"\");\n};\nexports.trimRight = String.prototype.trimRight ? function trimRightNative(str) {\n    return str.trimRight();\n} : function trimRightRegExp(str) {\n    return str.replace(/\\s+$/, \"\");\n};\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY3N2dG9qc29uL3YyL3V0aWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLGdCQUFnQjtBQUNoQjtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2FuYWx5dGljcy1kYXNoYm9hcmQtYXNzZXNzbWVudC8uL25vZGVfbW9kdWxlcy9jc3Z0b2pzb24vdjIvdXRpbC5qcz9iYTk5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZnVuY3Rpb24gYnVmRnJvbVN0cmluZyhzdHIpIHtcbiAgICB2YXIgbGVuZ3RoID0gQnVmZmVyLmJ5dGVMZW5ndGgoc3RyKTtcbiAgICB2YXIgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlXG4gICAgICAgID8gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aClcbiAgICAgICAgOiBuZXcgQnVmZmVyKGxlbmd0aCk7XG4gICAgYnVmZmVyLndyaXRlKHN0cik7XG4gICAgcmV0dXJuIGJ1ZmZlcjtcbn1cbmV4cG9ydHMuYnVmRnJvbVN0cmluZyA9IGJ1ZkZyb21TdHJpbmc7XG5mdW5jdGlvbiBlbXB0eUJ1ZmZlcigpIHtcbiAgICB2YXIgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlXG4gICAgICAgID8gQnVmZmVyLmFsbG9jVW5zYWZlKDApXG4gICAgICAgIDogbmV3IEJ1ZmZlcigwKTtcbiAgICByZXR1cm4gYnVmZmVyO1xufVxuZXhwb3J0cy5lbXB0eUJ1ZmZlciA9IGVtcHR5QnVmZmVyO1xuZnVuY3Rpb24gZmlsdGVyQXJyYXkoYXJyLCBmaWx0ZXIpIHtcbiAgICB2YXIgcnRuID0gW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGZpbHRlci5pbmRleE9mKGkpID4gLTEpIHtcbiAgICAgICAgICAgIHJ0bi5wdXNoKGFycltpXSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJ0bjtcbn1cbmV4cG9ydHMuZmlsdGVyQXJyYXkgPSBmaWx0ZXJBcnJheTtcbmV4cG9ydHMudHJpbUxlZnQgPSBTdHJpbmcucHJvdG90eXBlLnRyaW1MZWZ0ID8gZnVuY3Rpb24gdHJpbUxlZnROYXRpdmUoc3RyKSB7XG4gICAgcmV0dXJuIHN0ci50cmltTGVmdCgpO1xufSA6IGZ1bmN0aW9uIHRyaW1MZWZ0UmVnRXhwKHN0cikge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvXlxccysvLCBcIlwiKTtcbn07XG5leHBvcnRzLnRyaW1SaWdodCA9IFN0cmluZy5wcm90b3R5cGUudHJpbVJpZ2h0ID8gZnVuY3Rpb24gdHJpbVJpZ2h0TmF0aXZlKHN0cikge1xuICAgIHJldHVybiBzdHIudHJpbVJpZ2h0KCk7XG59IDogZnVuY3Rpb24gdHJpbVJpZ2h0UmVnRXhwKHN0cikge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvXFxzKyQvLCBcIlwiKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/csvtojson/v2/util.js\n");

/***/ })

};
;